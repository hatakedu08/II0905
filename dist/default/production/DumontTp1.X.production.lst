

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 18 18:45:42 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46J50 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  001317                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _BankIndex
    77  001317  FF                 	db	255
    78                           
    79                           ;initializer for _defaultHops
    80  001318  04                 	db	4
    81                           
    82                           	psect	idataBANK0
    83  00130E                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _AcknowledgementSeq
    87  00130E  FF                 	db	255
    88                           
    89                           ;initializer for _myLongAddress
    90  00130F  03                 	db	3
    91  001310  11                 	db	17
    92  001311  22                 	db	34
    93  001312  33                 	db	51
    94  001313  44                 	db	68
    95  001314  55                 	db	85
    96  001315  66                 	db	102
    97  001316  11                 	db	17
    98                           
    99                           	psect	smallconst
   100  000F00                     __psmallconst:
   101                           	opt stack 0
   102  000F00  00                 	db	0
   103  000F01                     _ScanTime:
   104                           	opt stack 0
   105  000F01  03C0               	dw	960
   106  000F03  0000               	dw	0
   107  000F05  05A0               	dw	1440
   108  000F07  0000               	dw	0
   109  000F09  0960               	dw	2400
   110  000F0B  0000               	dw	0
   111  000F0D  10E0               	dw	4320
   112  000F0F  0000               	dw	0
   113  000F11  1FE0               	dw	8160
   114  000F13  0000               	dw	0
   115  000F15  3DE0               	dw	15840
   116  000F17  0000               	dw	0
   117  000F19  79E0               	dw	31200
   118  000F1B  0000               	dw	0
   119  000F1D  F1E0               	dw	61920
   120  000F1F  0000               	dw	0
   121  000F21  E1E0               	dw	57824
   122  000F23  0001               	dw	1
   123  000F25  C1E0               	dw	49632
   124  000F27  0003               	dw	3
   125  000F29  81E0               	dw	33248
   126  000F2B  0007               	dw	7
   127  000F2D  01E0               	dw	480
   128  000F2F  000F               	dw	15
   129  000F31  01E0               	dw	480
   130  000F33  001E               	dw	30
   131  000F35  3D44               	dw	15684
   132  000F37  001B               	dw	27
   133  000F39  B40D               	dw	46093
   134  000F3B  0015               	dw	21
   135  000F3D                     __end_of_ScanTime:
   136                           	opt stack 0
   137  000F3D                     _octpowers:
   138                           	opt stack 0
   139  000F3D  0001               	dw	1
   140  000F3F  0008               	dw	8
   141  000F41  0040               	dw	64
   142  000F43  0200               	dw	512
   143  000F45  1000               	dw	4096
   144  000F47  8000               	dw	32768
   145  000F49                     __end_of_octpowers:
   146                           	opt stack 0
   147  000F49                     _dpowers:
   148                           	opt stack 0
   149  000F49  0001               	dw	1
   150  000F4B  000A               	dw	10
   151  000F4D  0064               	dw	100
   152  000F4F  03E8               	dw	1000
   153  000F51  2710               	dw	10000
   154  000F53                     __end_of_dpowers:
   155                           	opt stack 0
   156  000F53                     _hexpowers:
   157                           	opt stack 0
   158  000F53  0001               	dw	1
   159  000F55  0010               	dw	16
   160  000F57  0100               	dw	256
   161  000F59  1000               	dw	4096
   162  000F5B                     __end_of_hexpowers:
   163                           	opt stack 0
   164  0000                     _RPOR17	set	3799
   165  0000                     _RPINR16	set	3830
   166  0000                     _RPINR1	set	3815
   167  0000                     _PPSCONbits	set	3839
   168  0000                     _ANCON1	set	3913
   169  0000                     _ANCON0	set	3912
   170  0000                     _TXREG2	set	4009
   171  0000                     _TXSTA2bits	set	4008
   172  0000                     _RCREG2	set	4010
   173  0000                     _RCSTA2bits	set	3996
   174  0000                     _RCSTA2	set	3996
   175  0000                     _TXSTA2	set	4008
   176  0000                     _SPBRG2	set	4011
   177  0000                     _SPBRGH2	set	3965
   178  0000                     _BAUDCON1bits	set	3966
   179  0000                     _TMR0L	set	4054
   180  0000                     _INTCON3bits	set	4080
   181  0000                     _LATCbits	set	3979
   182  0000                     _SSP1CON1	set	4038
   183  0000                     _SSP1STAT	set	4039
   184  0000                     _TRISCbits	set	3988
   185  0000                     _LATDbits	set	3980
   186  0000                     _TRISDbits	set	3989
   187  0000                     _LATBbits	set	3978
   188  0000                     _TRISAbits	set	3986
   189  0000                     _TRISBbits	set	3987
   190  0000                     _LATE	set	3981
   191  0000                     _LATD	set	3980
   192  0000                     _LATB	set	3978
   193  0000                     _LATA	set	3977
   194  0000                     _TRISE	set	3990
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _EECON2	set	4007
   200  0000                     _INTCON	set	4082
   201  0000                     _OSCTUNEbits	set	3995
   202  0000                     _WDTCONbits	set	4032
   203  0000                     _OSCCON	set	4051
   204  0000                     _TMR1H	set	4047
   205  0000                     _TMR1L	set	4046
   206  0000                     _T1CONbits	set	4045
   207  0000                     _PIE1bits	set	3997
   208  0000                     _T1CON	set	4045
   209  0000                     _SSP2CON1bits	set	3954
   210  0000                     _SSP1CON1bits	set	4038
   211  0000                     _SSP1BUF	set	4041
   212  0000                     _PIR1bits	set	3998
   213  0000                     _INTCONbits	set	4082
   214  0000                     _PIE3bits	set	4003
   215  0000                     _SSP2CON2	set	3953
   216  0000                     _SSP2CON1	set	3954
   217  0000                     _SSP2ADD	set	3956
   218  0000                     _SSP2STAT	set	3955
   219  0000                     _PIR3bits	set	4004
   220  0000                     _TRISD	set	3989
   221  0000                     _SSP2BUF	set	3957
   222  0000                     _SSP2CON2bits	set	3953
   223  0000                     _PORTBbits	set	3969
   224  000F5B  30                 	db	48	;'0'
   225  000F5C  31                 	db	49	;'1'
   226  000F5D  32                 	db	50	;'2'
   227  000F5E  33                 	db	51	;'3'
   228  000F5F  34                 	db	52	;'4'
   229  000F60  35                 	db	53	;'5'
   230  000F61  36                 	db	54	;'6'
   231  000F62  37                 	db	55	;'7'
   232  000F63  38                 	db	56	;'8'
   233  000F64  39                 	db	57	;'9'
   234  000F65  41                 	db	65	;'A'
   235  000F66  42                 	db	66	;'B'
   236  000F67  43                 	db	67	;'C'
   237  000F68  44                 	db	68	;'D'
   238  000F69  45                 	db	69	;'E'
   239  000F6A  46                 	db	70	;'F'
   240  000F6B  00                 	db	0
   241  000F6C  30                 	db	48	;'0'
   242  000F6D  31                 	db	49	;'1'
   243  000F6E  32                 	db	50	;'2'
   244  000F6F  33                 	db	51	;'3'
   245  000F70  34                 	db	52	;'4'
   246  000F71  35                 	db	53	;'5'
   247  000F72  36                 	db	54	;'6'
   248  000F73  37                 	db	55	;'7'
   249  000F74  38                 	db	56	;'8'
   250  000F75  39                 	db	57	;'9'
   251  000F76  61                 	db	97	;'a'
   252  000F77  62                 	db	98	;'b'
   253  000F78  63                 	db	99	;'c'
   254  000F79  64                 	db	100	;'d'
   255  000F7A  65                 	db	101	;'e'
   256  000F7B  66                 	db	102	;'f'
   257  000F7C  00                 	db	0
   258  000F7D  52                 	db	82	;'R'
   259  000F7E  58                 	db	88	;'X'
   260  000F7F  20                 	db	32
   261  000F80  4D                 	db	77	;'M'
   262  000F81  65                 	db	101	;'e'
   263  000F82  73                 	db	115	;'s'
   264  000F83  73                 	db	115	;'s'
   265  000F84  61                 	db	97	;'a'
   266  000F85  67                 	db	103	;'g'
   267  000F86  65                 	db	101	;'e'
   268  000F87  73                 	db	115	;'s'
   269  000F88  3A                 	db	58	;':'
   270  000F89  20                 	db	32
   271  000F8A  25                 	db	37
   272  000F8B  33                 	db	51	;'3'
   273  000F8C  64                 	db	100	;'d'
   274  000F8D  00                 	db	0
   275  000F8E  54                 	db	84	;'T'
   276  000F8F  58                 	db	88	;'X'
   277  000F90  20                 	db	32
   278  000F91  4D                 	db	77	;'M'
   279  000F92  65                 	db	101	;'e'
   280  000F93  73                 	db	115	;'s'
   281  000F94  73                 	db	115	;'s'
   282  000F95  61                 	db	97	;'a'
   283  000F96  67                 	db	103	;'g'
   284  000F97  65                 	db	101	;'e'
   285  000F98  73                 	db	115	;'s'
   286  000F99  3A                 	db	58	;':'
   287  000F9A  20                 	db	32
   288  000F9B  25                 	db	37
   289  000F9C  33                 	db	51	;'3'
   290  000F9D  64                 	db	100	;'d'
   291  000F9E  00                 	db	0
   292  000F9F                     STR_3:
   293  000F9F  79                 	db	121	;'y'
   294  000FA0  6F                 	db	111	;'o'
   295  000FA1  6C                 	db	108	;'l'
   296  000FA2  6F                 	db	111	;'o'
   297  000FA3  6F                 	db	111	;'o'
   298  000FA4  6F                 	db	111	;'o'
   299  000FA5  6F                 	db	111	;'o'
   300  000FA6  6F                 	db	111	;'o'
   301  000FA7  00                 	db	0
   302                           
   303                           ; #config settings
   304  000FA8  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           	psect	cinit
   307  0010E6                     __pcinit:
   308                           	opt stack 0
   309  0010E6                     start_initialization:
   310                           	opt stack 0
   311  0010E6                     __initialization:
   312                           	opt stack 0
   313                           
   314                           ; Initialize objects allocated to BANK0 (9 bytes)
   315                           ; load TBLPTR registers with __pidataBANK0
   316  0010E6  0E0E               	movlw	low __pidataBANK0
   317  0010E8  6EF6               	movwf	tblptrl,c
   318  0010EA  0E13               	movlw	high __pidataBANK0
   319  0010EC  6EF7               	movwf	tblptrh,c
   320  0010EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   321  0010F0  6EF8               	movwf	tblptru,c
   322  0010F2  EE00  F0EA         	lfsr	0,__pdataBANK0
   323  0010F6  EE10 F009          	lfsr	1,9
   324  0010FA                     copy_data0:
   325  0010FA  0009               	tblrd		*+
   326  0010FC  CFF5 FFEE          	movff	tablat,postinc0
   327  001100  50E5               	movf	postdec1,w,c
   328  001102  50E1               	movf	fsr1l,w,c
   329  001104  E1FA               	bnz	copy_data0
   330                           
   331                           ; Initialize objects allocated to COMRAM (2 bytes)
   332                           ; load TBLPTR registers with __pidataCOMRAM
   333  001106  0E17               	movlw	low __pidataCOMRAM
   334  001108  6EF6               	movwf	tblptrl,c
   335  00110A  0E13               	movlw	high __pidataCOMRAM
   336  00110C  6EF7               	movwf	tblptrh,c
   337  00110E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   338  001110  6EF8               	movwf	tblptru,c
   339  001112  0009               	tblrd		*+	;fetch initializer
   340  001114  CFF5 F05B          	movff	tablat,__pdataCOMRAM
   341  001118  0009               	tblrd		*+	;fetch initializer
   342  00111A  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
   343                           
   344                           ; Clear objects allocated to BIGRAM (640 bytes)
   345  00111E  EE02  F08C         	lfsr	0,__pbssBIGRAM
   346  001122  EE12 F080          	lfsr	1,640
   347  001126                     clear_0:
   348  001126  6AEE               	clrf	postinc0,c
   349  001128  50E5               	movf	postdec1,w,c
   350  00112A  50E1               	movf	fsr1l,w,c
   351  00112C  E1FC               	bnz	clear_0
   352  00112E  50E2               	movf	fsr1h,w,c
   353  001130  E1FA               	bnz	clear_0
   354                           
   355                           ; Clear objects allocated to BANK2 (140 bytes)
   356  001132  EE02  F000         	lfsr	0,__pbssBANK2
   357  001136  0E8C               	movlw	140
   358  001138                     clear_1:
   359  001138  6AEE               	clrf	postinc0,c
   360  00113A  06E8               	decf	wreg,f,c
   361  00113C  E1FD               	bnz	clear_1
   362                           
   363                           ; Clear objects allocated to BANK1 (156 bytes)
   364  00113E  EE01  F000         	lfsr	0,__pbssBANK1
   365  001142  0E9C               	movlw	156
   366  001144                     clear_2:
   367  001144  6AEE               	clrf	postinc0,c
   368  001146  06E8               	decf	wreg,f,c
   369  001148  E1FD               	bnz	clear_2
   370                           
   371                           ; Clear objects allocated to BANK0 (138 bytes)
   372  00114A  EE00  F060         	lfsr	0,__pbssBANK0
   373  00114E  0E8A               	movlw	138
   374  001150                     clear_3:
   375  001150  6AEE               	clrf	postinc0,c
   376  001152  06E8               	decf	wreg,f,c
   377  001154  E1FD               	bnz	clear_3
   378                           
   379                           ; Clear objects allocated to COMRAM (44 bytes)
   380  001156  EE00  F02F         	lfsr	0,__pbssCOMRAM
   381  00115A  0E2C               	movlw	44
   382  00115C                     clear_4:
   383  00115C  6AEE               	clrf	postinc0,c
   384  00115E  06E8               	decf	wreg,f,c
   385  001160  E1FD               	bnz	clear_4
   386  001162                     end_of_initialization:
   387                           	opt stack 0
   388  001162                     __end_of__initialization:
   389                           	opt stack 0
   390  001162  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   391  001164  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392  001166  0E00               	movlw	low (__Lmediumconst shr (0+16))
   393  001168  6EF8               	movwf	tblptru,c
   394  00116A  0100               	movlb	0
   395  00116C  EF73  F009         	goto	_main	;jump to C main() function
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1h	equ	0xFE2
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	bssCOMRAM
   407  00002F                     __pbssCOMRAM:
   408                           	opt stack 0
   409  00002F                     _MACRxPacket:
   410                           	opt stack 0
   411  00002F                     	ds	11
   412  00003A                     _MTP:
   413                           	opt stack 0
   414  00003A                     	ds	7
   415  000041                     _MiWiStateMachine:
   416                           	opt stack 0
   417  000041                     	ds	2
   418  000043                     _MRF24J40Status:
   419                           	opt stack 0
   420  000043                     	ds	1
   421  000044                     _role:
   422                           	opt stack 0
   423  000044                     	ds	1
   424  000045                     _MiWiSeqNum:
   425                           	opt stack 0
   426  000045                     	ds	1
   427  000046                     _myParent:
   428                           	opt stack 0
   429  000046                     	ds	1
   430  000047                     _TxData:
   431                           	opt stack 0
   432  000047                     	ds	1
   433  000048                     _tempNodeStatus:
   434                           	opt stack 0
   435  000048                     	ds	1
   436  000049                     _ActiveScanResultIndex:
   437                           	opt stack 0
   438  000049                     	ds	1
   439  00004A                     _ConnMode:
   440                           	opt stack 0
   441  00004A                     	ds	1
   442  00004B                     _timerExtension1:
   443                           	opt stack 0
   444  00004B                     	ds	1
   445  00004C                     _TextPtr:
   446                           	opt stack 0
   447  00004C                     	ds	1
   448  00004D                     _CommandPtr:
   449                           	opt stack 0
   450  00004D                     	ds	1
   451  00004E                     _TextLen:
   452                           	opt stack 0
   453  00004E                     	ds	1
   454  00004F                     _CommandLen:
   455                           	opt stack 0
   456  00004F                     	ds	1
   457  000050                     _myNetworkAddress:
   458                           	opt stack 0
   459  000050                     	ds	2
   460  000052                     _MAC_PANID:
   461                           	opt stack 0
   462  000052                     	ds	2
   463  000054                     _myPANID:
   464                           	opt stack 0
   465  000054                     	ds	2
   466  000056                     _myShortAddress:
   467                           	opt stack 0
   468  000056                     	ds	2
   469  000058                     _tempShortAddress:
   470                           	opt stack 0
   471  000058                     	ds	2
   472  00005A                     _currentChannel:
   473                           	opt stack 0
   474  00005A                     	ds	1
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1h	equ	0xFE2
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	dataCOMRAM
   486  00005B                     __pdataCOMRAM:
   487                           	opt stack 0
   488  00005B                     _BankIndex:
   489                           	opt stack 0
   490  00005B                     	ds	1
   491  00005C                     _defaultHops:
   492                           	opt stack 0
   493  00005C                     	ds	1
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1h	equ	0xFE2
   502                           fsr1l	equ	0xFE1
   503                           
   504                           	psect	bssBANK0
   505  000060                     __pbssBANK0:
   506                           	opt stack 0
   507  000060                     _rxMessage:
   508                           	opt stack 0
   509  000060                     	ds	10
   510  00006A                     _RouterFailures:
   511                           	opt stack 0
   512  00006A                     	ds	8
   513  000072                     _RoutingTable:
   514                           	opt stack 0
   515  000072                     	ds	8
   516  00007A                     _tempLongAddress:
   517                           	opt stack 0
   518  00007A                     	ds	8
   519  000082                     _LCDCommand:
   520                           	opt stack 0
   521  000082                     	ds	4
   522  000086                     _switch1PressTime:
   523                           	opt stack 0
   524  000086                     	ds	4
   525  00008A                     _switch0PressTime:
   526                           	opt stack 0
   527  00008A                     	ds	4
   528  00008E                     _MACInitParams:
   529                           	opt stack 0
   530  00008E                     	ds	3
   531  000091                     _failureCounter:
   532                           	opt stack 0
   533  000091                     	ds	2
   534  000093                     _AcknowledgementAddr:
   535                           	opt stack 0
   536  000093                     	ds	2
   537  000095                     _MACCurrentChannel:
   538                           	opt stack 0
   539  000095                     	ds	1
   540  000096                     _IEEESeqNum:
   541                           	opt stack 0
   542  000096                     	ds	1
   543  000097                     _knownCoordinators:
   544                           	opt stack 0
   545  000097                     	ds	1
   546  000098                     _MiWiAckRequired:
   547                           	opt stack 0
   548  000098                     	ds	1
   549  000099                     _MiWiCapacityInfo:
   550                           	opt stack 0
   551  000099                     	ds	1
   552  00009A                     _timerExtension2:
   553                           	opt stack 0
   554  00009A                     	ds	1
   555  00009B                     _TxBuffer:
   556                           	opt stack 0
   557  00009B                     	ds	51
   558  0000CE                     _openSocketInfo:
   559                           	opt stack 0
   560  0000CE                     	ds	26
   561  0000E8                     _tempPANID:
   562                           	opt stack 0
   563  0000E8                     	ds	2
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	dataBANK0
   575  0000EA                     __pdataBANK0:
   576                           	opt stack 0
   577  0000EA                     _AcknowledgementSeq:
   578                           	opt stack 0
   579  0000EA                     	ds	1
   580  0000EB                     _myLongAddress:
   581                           	opt stack 0
   582  0000EB                     	ds	8
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1h	equ	0xFE2
   591                           fsr1l	equ	0xFE1
   592                           
   593                           	psect	bssBANK1
   594  000100                     __pbssBANK1:
   595                           	opt stack 0
   596  000100                     _BroadcastRecords:
   597                           	opt stack 0
   598  000100                     	ds	32
   599  000120                     _ConnectionTable:
   600                           	opt stack 0
   601  000120                     	ds	91
   602  00017B                     _LCDText:
   603                           	opt stack 0
   604  00017B                     	ds	33
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           postdec1	equ	0xFE5
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	bssBANK2
   616  000200                     __pbssBANK2:
   617                           	opt stack 0
   618  000200                     _ActiveScanResults:
   619                           	opt stack 0
   620  000200                     	ds	140
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1h	equ	0xFE2
   629                           fsr1l	equ	0xFE1
   630                           
   631                           	psect	bssBIGRAM
   632  00028C                     __pbssBIGRAM:
   633                           	opt stack 0
   634  00028C                     _RxBuffer:
   635                           	opt stack 0
   636  00028C                     	ds	640
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1h	equ	0xFE2
   645                           fsr1l	equ	0xFE1
   646                           
   647                           	psect	cstackBANK0
   648  0000F3                     __pcstackBANK0:
   649                           	opt stack 0
   650  0000F3                     uartWrite@c:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x0
   654  0000F3                     	ds	1
   655  0000F4                     uartRead@val:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x1
   659  0000F4                     	ds	1
   660  0000F5                     tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1h	equ	0xFE2
   668                           fsr1l	equ	0xFE1
   669                           
   670                           ; 1 bytes @ 0x2
   671                           
   672                           	psect	cstackCOMRAM
   673  000001                     __pcstackCOMRAM:
   674                           	opt stack 0
   675  000001                     ?___lmul:
   676                           	opt stack 0
   677  000001                     SPIPut@i:
   678                           	opt stack 0
   679  000001                     ___lmul@multiplier:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x0
   683  000001                     	ds	1
   684  000002                     SPIPut@v:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x1
   688  000002                     	ds	1
   689  000003                     PHYSetShortRAMAddr@value:
   690                           	opt stack 0
   691  000003                     PHYGetShortRAMAddr@address:
   692                           	opt stack 0
   693  000003                     PHYGetLongRAMAddr@address:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697  000003                     	ds	1
   698  000004                     PHYSetShortRAMAddr@address:
   699                           	opt stack 0
   700  000004                     PHYGetShortRAMAddr@toReturn:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x3
   704  000004                     	ds	1
   705  000005                     ??_PHYGetLongRAMAddr:
   706  000005                     PHYSetShortRAMAddr@tmpRFIE:
   707                           	opt stack 0
   708  000005                     PHYGetShortRAMAddr@tmpRFIE:
   709                           	opt stack 0
   710  000005                     ___lmul@multiplicand:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x4
   714  000005                     	ds	2
   715  000007                     PHYGetLongRAMAddr@toReturn:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x6
   719  000007                     	ds	1
   720  000008                     PHYGetLongRAMAddr@tmpRFIE:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x7
   724  000008                     	ds	1
   725  000009                     ___lmul@product:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x8
   729  000009                     	ds	4
   730  00000D                     DELAY_ms@ms:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xC
   734  00000D                     	ds	2
   735  00000F                     DELAY_ms@cyclesRequiredForEntireDelay:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0xE
   739  00000F                     	ds	4
   740  000013                     ??_high_isr:
   741                           
   742                           ; 1 bytes @ 0x12
   743  000013                     	ds	23
   744  00002A                     high_isr@results:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x29
   748  00002A                     	ds	1
   749  00002B                     high_isr@flags:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x2A
   753  00002B                     	ds	2
   754  00002D                     high_isr@RxBank:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x2C
   758  00002D                     	ds	1
   759  00002E                     high_isr@i:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x2D
   763  00002E                     	ds	1
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           postdec1	equ	0xFE5
   771                           fsr1h	equ	0xFE2
   772                           fsr1l	equ	0xFE1
   773                           
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 42 in file "firmware/src/main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels required when called:    7
   799 ;; This function calls:
   800 ;;		_uartInitialize
   801 ;;		_uartRead
   802 ;;		_uartWrite
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  0012E6                     __ptext0:
   810                           	opt stack 0
   811  0012E6                     _main:
   812                           	opt stack 24
   813                           
   814                           ;main.c: 44: uartInitialize();
   815                           
   816                           ;incstack = 0
   817  0012E6  EC5B  F009         	call	_uartInitialize	;wreg free
   818                           
   819                           ;main.c: 45: uartWrite("yolooooo");
   820  0012EA  0E9F               	movlw	STR_3& (0+255)
   821  0012EC  EC7B  F009         	call	_uartWrite
   822                           
   823                           ;main.c: 46: uartRead();
   824  0012F0  EC0C  F009         	call	_uartRead	;wreg free
   825  0012F4                     l1109:
   826  0012F4  D7FF               	goto	l1109
   827  0012F6                     __end_of_main:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1h	equ	0xFE2
   837                           fsr1l	equ	0xFE1
   838                           
   839 ;; *************** function _uartRead *****************
   840 ;; Defined at:
   841 ;;		line 49 in file "firmware/src/VT100.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  val             1    1[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      unsigned char 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    6
   862 ;; This function calls:
   863 ;;		_uartWrite
   864 ;;		_vT100EraseEndOfLine
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text1
   871  001218                     __ptext1:
   872                           	opt stack 0
   873  001218                     _uartRead:
   874                           	opt stack 24
   875                           
   876                           ;VT100.c: 50: uint8_t val;
   877                           ;VT100.c: 51: if(RCSTA2bits.OERR) {
   878                           
   879                           ;incstack = 0
   880  001218  A29C               	btfss	3996,1,c	;volatile
   881  00121A  D002               	goto	l1071
   882                           
   883                           ;VT100.c: 52: RCSTA2bits.CREN = 0;
   884  00121C  989C               	bcf	3996,4,c	;volatile
   885                           
   886                           ;VT100.c: 53: RCSTA2bits.CREN = 1;
   887  00121E  889C               	bsf	3996,4,c	;volatile
   888  001220                     l1071:
   889                           
   890                           ;VT100.c: 54: }
   891                           ;VT100.c: 56: val = RCREG2;
   892  001220  CFAA F0F4          	movff	4010,uartRead@val	;volatile
   893                           
   894                           ;VT100.c: 57: uartWrite(val);
   895  001224  0100               	movlb	0	; () banked
   896  001226  51F4               	movf	uartRead@val& (0+255),w,b
   897  001228  EC7B  F009         	call	_uartWrite
   898                           
   899                           ;VT100.c: 58: if(val == 0x08) vT100EraseEndOfLine();
   900  00122C  0E08               	movlw	8
   901  00122E  0100               	movlb	0	; () banked
   902  001230  19F4               	xorwf	uartRead@val& (0+255),w,b
   903  001232  B4D8               	btfsc	status,2,c
   904                           
   905                           ; BSR set to: 0
   906  001234  EC8D  F009         	call	_vT100EraseEndOfLine	;wreg free
   907                           
   908                           ;VT100.c: 59: if(val == 0x0D) uartWrite(0x0A);
   909  001238  0E0D               	movlw	13
   910  00123A  0100               	movlb	0	; () banked
   911  00123C  19F4               	xorwf	uartRead@val& (0+255),w,b
   912  00123E  A4D8               	btfss	status,2,c
   913  001240  0012               	return	
   914                           
   915                           ; BSR set to: 0
   916  001242  0E0A               	movlw	10
   917  001244  EC7B  F009         	call	_uartWrite
   918  001248  0012               	return	
   919  00124A                     __end_of_uartRead:
   920                           	opt stack 0
   921                           tblptru	equ	0xFF8
   922                           tblptrh	equ	0xFF7
   923                           tblptrl	equ	0xFF6
   924                           tablat	equ	0xFF5
   925                           postinc0	equ	0xFEE
   926                           wreg	equ	0xFE8
   927                           postdec1	equ	0xFE5
   928                           fsr1h	equ	0xFE2
   929                           fsr1l	equ	0xFE1
   930                           status	equ	0xFD8
   931                           
   932 ;; *************** function _vT100EraseEndOfLine *****************
   933 ;; Defined at:
   934 ;;		line 141 in file "firmware/src/VT100.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		None
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    5
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_uartRead
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text2
   963  00131A                     __ptext2:
   964                           	opt stack 0
   965  00131A                     _vT100EraseEndOfLine:
   966                           	opt stack 24
   967                           
   968                           ;incstack = 0
   969  00131A  0012               	return		;funcret
   970  00131C                     __end_of_vT100EraseEndOfLine:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1h	equ	0xFE2
   980                           fsr1l	equ	0xFE1
   981                           status	equ	0xFD8
   982                           
   983 ;; *************** function _uartWrite *****************
   984 ;; Defined at:
   985 ;;		line 67 in file "firmware/src/VT100.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  c               1    wreg     unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  c               1    0[BANK0 ] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;Total ram usage:        1 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    5
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_uartRead
  1010 ;;		_main
  1011 ;;		__uartPrint
  1012 ;;		_uartHexaPrint
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text3
  1017  0012F6                     __ptext3:
  1018                           	opt stack 0
  1019  0012F6                     _uartWrite:
  1020                           	opt stack 25
  1021                           
  1022                           ;incstack = 0
  1023                           ;uartWrite@c stored from wreg
  1024  0012F6  0100               	movlb	0	; () banked
  1025  0012F8  6FF3               	movwf	uartWrite@c& (0+255),b
  1026  0012FA                     
  1027                           ;VT100.c: 68: while(TXSTA2bits.TRMT == 0);
  1028  0012FA  A2A8               	btfss	4008,1,c	;volatile
  1029  0012FC  D7FE               	goto	l8652
  1030                           
  1031                           ;VT100.c: 69: TXREG2 = c;
  1032  0012FE  C0F3  FFA9         	movff	uartWrite@c,4009	;volatile
  1033  001302  0012               	return		;funcret
  1034  001304                     __end_of_uartWrite:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1h	equ	0xFE2
  1044                           fsr1l	equ	0xFE1
  1045                           status	equ	0xFD8
  1046                           
  1047 ;; *************** function _uartInitialize *****************
  1048 ;; Defined at:
  1049 ;;		line 28 in file "firmware/src/VT100.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    5
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078  0012B6                     __ptext4:
  1079                           	opt stack 0
  1080  0012B6                     _uartInitialize:
  1081                           	opt stack 25
  1082                           
  1083                           ;VT100.c: 29: TRISCbits.TRISC6 = 0;
  1084                           
  1085                           ;incstack = 0
  1086  0012B6  9C94               	bcf	3988,6,c	;volatile
  1087                           
  1088                           ;VT100.c: 30: TRISDbits.TRISD2 = 1;
  1089  0012B8  8495               	bsf	3989,2,c	;volatile
  1090                           
  1091                           ;VT100.c: 31: BAUDCON1bits.BRG16 = 0;
  1092  0012BA  967E               	bcf	3966,3,c	;volatile
  1093                           
  1094                           ;VT100.c: 32: SPBRGH2 = 0;
  1095  0012BC  0E00               	movlw	0
  1096  0012BE  6E7D               	movwf	3965,c	;volatile
  1097                           
  1098                           ;VT100.c: 35: SPBRG2 = (8000000/2*4)/16/19200-1;
  1099  0012C0  0E33               	movlw	51
  1100  0012C2  6EAB               	movwf	4011,c	;volatile
  1101                           
  1102                           ;VT100.c: 36: TXSTA2 = 0x24;
  1103  0012C4  0E24               	movlw	36
  1104  0012C6  6EA8               	movwf	4008,c	;volatile
  1105                           
  1106                           ;VT100.c: 37: RCSTA2=0x90;
  1107  0012C8  0E90               	movlw	144
  1108  0012CA  6E9C               	movwf	3996,c	;volatile
  1109  0012CC  0012               	return		;funcret
  1110  0012CE                     __end_of_uartInitialize:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1h	equ	0xFE2
  1120                           fsr1l	equ	0xFE1
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _high_isr *****************
  1124 ;; Defined at:
  1125 ;;		line 1852 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  results         1   41[COMRAM] struct _DRIVER_UINT8_UNI
  1130 ;;  RxBank          1   44[COMRAM] unsigned char 
  1131 ;;  flags           2   42[COMRAM] struct .
  1132 ;;  i               1   45[COMRAM] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1143 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Temps:         23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;Total ram usage:       28 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    4
  1149 ;; This function calls:
  1150 ;;		_PHYGetLongRAMAddr
  1151 ;;		_PHYGetShortRAMAddr
  1152 ;;		_PHYSetShortRAMAddr
  1153 ;;		_UserInterruptHandler
  1154 ;; This function is called by:
  1155 ;;		Interrupt level 2
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	intcode
  1160  000008                     __pintcode:
  1161                           	opt stack 0
  1162  000008                     _high_isr:
  1163                           	opt stack 24
  1164                           
  1165                           ;incstack = 0
  1166  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1167  00000A  CFFA F018          	movff	pclath,??_high_isr+5
  1168  00000E  CFFB F019          	movff	pclatu,??_high_isr+6
  1169  000012  CFE9 F01A          	movff	fsr0l,??_high_isr+7
  1170  000016  CFEA F01B          	movff	fsr0h,??_high_isr+8
  1171  00001A  CFE1 F01C          	movff	fsr1l,??_high_isr+9
  1172  00001E  CFE2 F01D          	movff	fsr1h,??_high_isr+10
  1173  000022  CFD9 F01E          	movff	fsr2l,??_high_isr+11
  1174  000026  CFDA F01F          	movff	fsr2h,??_high_isr+12
  1175  00002A  CFF3 F020          	movff	prodl,??_high_isr+13
  1176  00002E  CFF4 F021          	movff	prodh,??_high_isr+14
  1177  000032  CFF6 F022          	movff	tblptrl,??_high_isr+15
  1178  000036  CFF7 F023          	movff	tblptrh,??_high_isr+16
  1179  00003A  CFF8 F024          	movff	tblptru,??_high_isr+17
  1180  00003E  CFF5 F025          	movff	tablat,??_high_isr+18
  1181  000042  C05D  F026         	movff	btemp,??_high_isr+19
  1182  000046  C05E  F027         	movff	btemp+1,??_high_isr+20
  1183  00004A  C05F  F028         	movff	btemp+2,??_high_isr+21
  1184  00004E  C060  F029         	movff	btemp+3,??_high_isr+22
  1185                           
  1186                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
  1187  000052  B6F0               	btfsc	intcon3,3,c	;volatile
  1188  000054  A0F0               	btfss	intcon3,0,c	;volatile
  1189  000056  D0AB               	goto	i2l1035
  1190                           
  1191                           ;drv_mrf_miwi_24j40.c: 1868: {
  1192                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
  1193                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
  1194  000058  90F0               	bcf	intcon3,0,c	;volatile
  1195                           
  1196                           ;drv_mrf_miwi_24j40.c: 1877: {
  1197                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
  1198                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
  1199  00005A  0E62               	movlw	98
  1200  00005C  EC25  F009         	call	_PHYGetShortRAMAddr
  1201  000060  6E2B               	movwf	high_isr@flags,c
  1202                           
  1203                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
  1204  000062  A02B               	btfss	high_isr@flags,0,c
  1205  000064  D011               	goto	i2l1022
  1206                           
  1207                           ;drv_mrf_miwi_24j40.c: 1884: {
  1208                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
  1209  000066  9043               	bcf	_MRF24J40Status,0,c	;volatile
  1210                           
  1211                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
  1212  000068  BC43               	btfsc	_MRF24J40Status,6,c	;volatile
  1213                           
  1214                           ;drv_mrf_miwi_24j40.c: 1890: {
  1215                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
  1216  00006A  9C43               	bcf	_MRF24J40Status,6,c	;volatile
  1217                           
  1218                           ;drv_mrf_miwi_24j40.c: 1892: }
  1219                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
  1220  00006C  0E00               	movlw	0
  1221  00006E  0100               	movlb	0	; () banked
  1222  000070  6F92               	movwf	(_failureCounter+1)& (0+255),b	;volatile
  1223  000072  0E00               	movlw	0
  1224  000074  6F91               	movwf	_failureCounter& (0+255),b	;volatile
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
  1228  000076  A243               	btfss	_MRF24J40Status,1,c	;volatile
  1229  000078  D007               	goto	i2l1022
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;drv_mrf_miwi_24j40.c: 1899: {
  1233                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
  1234                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
  1235  00007A  0E48               	movlw	72
  1236  00007C  EC25  F009         	call	_PHYGetShortRAMAddr
  1237  000080  6E2A               	movwf	high_isr@results,c
  1238                           
  1239                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
  1240  000082  B02A               	btfsc	high_isr@results,0,c
  1241                           
  1242                           ;drv_mrf_miwi_24j40.c: 1906: {
  1243                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
  1244  000084  8443               	bsf	_MRF24J40Status,2,c	;volatile
  1245                           
  1246                           ;drv_mrf_miwi_24j40.c: 1910: }
  1247                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
  1248  000086  9243               	bcf	_MRF24J40Status,1,c	;volatile
  1249  000088                     i2l1022:
  1250                           
  1251                           ;drv_mrf_miwi_24j40.c: 1916: }
  1252                           ;drv_mrf_miwi_24j40.c: 1918: }
  1253                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
  1254  000088  A62B               	btfss	high_isr@flags,3,c
  1255  00008A  D08A               	goto	i2l1034
  1256                           
  1257                           ;drv_mrf_miwi_24j40.c: 1921: {
  1258                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
  1259  00008C  682D               	setf	high_isr@RxBank,c
  1260                           
  1261                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 8; i++)
  1262  00008E  0E00               	movlw	0
  1263  000090  6E2E               	movwf	high_isr@i,c
  1264  000092                     i2l8524:
  1265  000092  0E07               	movlw	7
  1266  000094  642E               	cpfsgt	high_isr@i,c
  1267  000096  D001               	goto	i2l1025
  1268  000098  D010               	goto	i2u938_40
  1269  00009A                     i2l1025:
  1270                           
  1271                           ;drv_mrf_miwi_24j40.c: 1925: {
  1272                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
  1273  00009A  502E               	movf	high_isr@i,w,c
  1274  00009C  0D50               	mullw	80
  1275  00009E  0E8C               	movlw	low _RxBuffer
  1276  0000A0  24F3               	addwf	prodl,w,c
  1277  0000A2  6ED9               	movwf	fsr2l,c
  1278  0000A4  0E02               	movlw	high _RxBuffer
  1279  0000A6  20F4               	addwfc	prodh,w,c
  1280  0000A8  6EDA               	movwf	fsr2h,c
  1281  0000AA  50DF               	movf	indf2,w,c
  1282  0000AC  A4D8               	btfss	status,2,c
  1283  0000AE  D003               	goto	i2l1027
  1284                           
  1285                           ;drv_mrf_miwi_24j40.c: 1927: {
  1286                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
  1287  0000B0  C02E  F02D         	movff	high_isr@i,high_isr@RxBank
  1288                           
  1289                           ;drv_mrf_miwi_24j40.c: 1929: break;
  1290  0000B4  D002               	goto	i2u938_40
  1291  0000B6                     i2l1027:
  1292  0000B6  2A2E               	incf	high_isr@i,f,c
  1293  0000B8  D7EC               	goto	i2l8524
  1294  0000BA                     i2u938_40:
  1295                           
  1296                           ;drv_mrf_miwi_24j40.c: 1930: }
  1297                           ;drv_mrf_miwi_24j40.c: 1931: }
  1298                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 8)
  1299  0000BA  0E08               	movlw	8
  1300  0000BC  602D               	cpfslt	high_isr@RxBank,c
  1301  0000BE  D06B               	goto	i2l1028
  1302                           
  1303                           ;drv_mrf_miwi_24j40.c: 1935: {
  1304                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
  1305  0000C0  0E04               	movlw	4
  1306  0000C2  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1307  0000C4  0E73               	movlw	115
  1308  0000C6  EC3A  F009         	call	_PHYSetShortRAMAddr
  1309                           
  1310                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
  1311  0000CA  502D               	movf	high_isr@RxBank,w,c
  1312  0000CC  0D50               	mullw	80
  1313  0000CE  0E8C               	movlw	low _RxBuffer
  1314  0000D0  24F3               	addwf	prodl,w,c
  1315  0000D2  6ED9               	movwf	fsr2l,c
  1316  0000D4  0E02               	movlw	high _RxBuffer
  1317  0000D6  20F4               	addwfc	prodh,w,c
  1318  0000D8  6EDA               	movwf	fsr2h,c
  1319  0000DA  0E03               	movlw	3
  1320  0000DC  6E04               	movwf	PHYGetLongRAMAddr@address+1,c
  1321  0000DE  0E00               	movlw	0
  1322  0000E0  6E03               	movwf	PHYGetLongRAMAddr@address,c
  1323  0000E2  ECE3  F008         	call	_PHYGetLongRAMAddr	;wreg free
  1324  0000E6  0F02               	addlw	2
  1325  0000E8  6EDF               	movwf	indf2,c
  1326                           
  1327                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+11+8+8+12))
  1328  0000EA  502D               	movf	high_isr@RxBank,w,c
  1329  0000EC  0D50               	mullw	80
  1330  0000EE  0E8C               	movlw	low _RxBuffer
  1331  0000F0  24F3               	addwf	prodl,w,c
  1332  0000F2  6ED9               	movwf	fsr2l,c
  1333  0000F4  0E02               	movlw	high _RxBuffer
  1334  0000F6  20F4               	addwfc	prodh,w,c
  1335  0000F8  6EDA               	movwf	fsr2h,c
  1336  0000FA  0E4F               	movlw	79
  1337  0000FC  60DF               	cpfslt	indf2,c
  1338  0000FE  D040               	goto	i2l1029
  1339                           
  1340                           ;drv_mrf_miwi_24j40.c: 1947: {
  1341                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
  1342  000100  8A43               	bsf	_MRF24J40Status,5,c	;volatile
  1343                           
  1344                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
  1345  000102  0E01               	movlw	1
  1346  000104  6E2E               	movwf	high_isr@i,c
  1347  000106  D01A               	goto	i2l1030
  1348  000108                     
  1349                           ;drv_mrf_miwi_24j40.c: 1953: {
  1350                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
  1351  000108  502D               	movf	high_isr@RxBank,w,c
  1352  00010A  0D50               	mullw	80
  1353  00010C  0E8C               	movlw	low _RxBuffer
  1354  00010E  6E13               	movwf	??_high_isr& (0+255),c
  1355  000110  0E02               	movlw	high _RxBuffer
  1356  000112  6E14               	movwf	(??_high_isr+1)& (0+255),c
  1357  000114  50F3               	movf	prodl,w,c
  1358  000116  2613               	addwf	??_high_isr,f,c
  1359  000118  50F4               	movf	prodh,w,c
  1360  00011A  2214               	addwfc	??_high_isr+1,f,c
  1361  00011C  502E               	movf	high_isr@i,w,c
  1362  00011E  2413               	addwf	??_high_isr,w,c
  1363  000120  6ED9               	movwf	fsr2l,c
  1364  000122  0E00               	movlw	0
  1365  000124  2014               	addwfc	??_high_isr+1,w,c
  1366  000126  6EDA               	movwf	fsr2h,c
  1367  000128  0E00               	movlw	0
  1368  00012A  242E               	addwf	high_isr@i,w,c
  1369  00012C  6E03               	movwf	PHYGetLongRAMAddr@address,c
  1370  00012E  6A04               	clrf	PHYGetLongRAMAddr@address+1,c
  1371  000130  0E03               	movlw	3
  1372  000132  2204               	addwfc	PHYGetLongRAMAddr@address+1,f,c
  1373  000134  ECE3  F008         	call	_PHYGetLongRAMAddr	;wreg free
  1374  000138  6EDF               	movwf	indf2,c
  1375  00013A  2A2E               	incf	high_isr@i,f,c
  1376  00013C                     i2l1030:
  1377  00013C  502E               	movf	high_isr@i,w,c
  1378  00013E  6E13               	movwf	??_high_isr& (0+255),c
  1379  000140  6A14               	clrf	(??_high_isr+1)& (0+255),c
  1380  000142  502D               	movf	high_isr@RxBank,w,c
  1381  000144  0D50               	mullw	80
  1382  000146  0E8C               	movlw	low _RxBuffer
  1383  000148  24F3               	addwf	prodl,w,c
  1384  00014A  6ED9               	movwf	fsr2l,c
  1385  00014C  0E02               	movlw	high _RxBuffer
  1386  00014E  20F4               	addwfc	prodh,w,c
  1387  000150  6EDA               	movwf	fsr2h,c
  1388  000152  50DF               	movf	indf2,w,c
  1389  000154  6E15               	movwf	(??_high_isr+2)& (0+255),c
  1390  000156  6A16               	clrf	(??_high_isr+3)& (0+255),c
  1391  000158  0E02               	movlw	2
  1392  00015A  2615               	addwf	??_high_isr+2,f,c
  1393  00015C  0E00               	movlw	0
  1394  00015E  2216               	addwfc	??_high_isr+3,f,c
  1395  000160  5013               	movf	??_high_isr,w,c
  1396  000162  5C15               	subwf	??_high_isr+2,w,c
  1397  000164  5016               	movf	??_high_isr+3,w,c
  1398  000166  0A80               	xorlw	128
  1399  000168  6E17               	movwf	(??_high_isr+4)& (0+255),c
  1400  00016A  5014               	movf	??_high_isr+1,w,c
  1401  00016C  0A80               	xorlw	128
  1402  00016E  5817               	subwfb	(??_high_isr+4)& (0+255),w,c
  1403  000170  B0D8               	btfsc	status,0,c
  1404  000172  D7CA               	goto	i2l1031
  1405                           
  1406                           ;drv_mrf_miwi_24j40.c: 1955: }
  1407                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
  1408  000174  0E01               	movlw	1
  1409  000176  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1410  000178  0E1B               	movlw	27
  1411  00017A  EC3A  F009         	call	_PHYSetShortRAMAddr
  1412                           
  1413                           ;drv_mrf_miwi_24j40.c: 1957: } else
  1414  00017E  D005               	goto	i2l1033
  1415  000180                     i2l1029:
  1416                           
  1417                           ;drv_mrf_miwi_24j40.c: 1958: {
  1418                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
  1419  000180  0E01               	movlw	1
  1420  000182  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1421  000184  0E1B               	movlw	27
  1422  000186  EC3A  F009         	call	_PHYSetShortRAMAddr
  1423  00018A                     i2l1033:
  1424                           
  1425                           ;drv_mrf_miwi_24j40.c: 1962: }
  1426                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
  1427  00018A  0E00               	movlw	0
  1428  00018C  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1429  00018E  0E73               	movlw	115
  1430  000190  EC3A  F009         	call	_PHYSetShortRAMAddr
  1431                           
  1432                           ;drv_mrf_miwi_24j40.c: 1966: } else
  1433  000194  D005               	goto	i2l1034
  1434  000196                     i2l1028:
  1435                           
  1436                           ;drv_mrf_miwi_24j40.c: 1967: {
  1437                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
  1438  000196  0E01               	movlw	1
  1439  000198  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1440  00019A  0E1B               	movlw	27
  1441  00019C  EC3A  F009         	call	_PHYSetShortRAMAddr
  1442  0001A0                     i2l1034:
  1443                           
  1444                           ;drv_mrf_miwi_24j40.c: 1977: }
  1445                           ;drv_mrf_miwi_24j40.c: 1979: }
  1446                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
  1447  0001A0  A82B               	btfss	high_isr@flags,4,c
  1448  0001A2  D005               	goto	i2l1035
  1449                           
  1450                           ;drv_mrf_miwi_24j40.c: 1983: {
  1451                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
  1452  0001A4  0E80               	movlw	128
  1453  0001A6  6E03               	movwf	PHYSetShortRAMAddr@value,c
  1454  0001A8  0E59               	movlw	89
  1455  0001AA  EC3A  F009         	call	_PHYSetShortRAMAddr
  1456  0001AE                     i2l1035:
  1457                           
  1458                           ;drv_mrf_miwi_24j40.c: 1985: }
  1459                           ;drv_mrf_miwi_24j40.c: 1986: }
  1460                           ;drv_mrf_miwi_24j40.c: 1987: }
  1461                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
  1462  0001AE  B09E               	btfsc	3998,0,c	;volatile
  1463                           
  1464                           ;drv_mrf_miwi_24j40.c: 1993: {
  1465                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
  1466  0001B0  A09D               	btfss	3997,0,c	;volatile
  1467  0001B2  D007               	goto	i2l1038
  1468                           
  1469                           ;drv_mrf_miwi_24j40.c: 1995: {
  1470                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
  1471  0001B4  909E               	bcf	3998,0,c	;volatile
  1472                           
  1473                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
  1474  0001B6  2A4B               	incf	_timerExtension1,f,c	;volatile
  1475                           
  1476                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
  1477  0001B8  504B               	movf	_timerExtension1,w,c	;volatile
  1478  0001BA  A4D8               	btfss	status,2,c
  1479  0001BC  D002               	goto	i2l1038
  1480                           
  1481                           ;drv_mrf_miwi_24j40.c: 2000: {
  1482                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
  1483  0001BE  0100               	movlb	0	; () banked
  1484  0001C0  2B9A               	incf	_timerExtension2& (0+255),f,b	;volatile
  1485  0001C2                     i2l1038:
  1486                           
  1487                           ;drv_mrf_miwi_24j40.c: 2002: }
  1488                           ;drv_mrf_miwi_24j40.c: 2003: }
  1489                           ;drv_mrf_miwi_24j40.c: 2004: }
  1490                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
  1491                           
  1492                           ; BSR set to: 0
  1493                           
  1494                           ; BSR set to: 0
  1495                           
  1496                           ; BSR set to: 0
  1497  0001C2  EC67  F009         	call	_UserInterruptHandler	;wreg free
  1498                           
  1499                           ;drv_mrf_miwi_24j40.c: 2009: return;
  1500  0001C6  C029  F060         	movff	??_high_isr+22,btemp+3
  1501  0001CA  C028  F05F         	movff	??_high_isr+21,btemp+2
  1502  0001CE  C027  F05E         	movff	??_high_isr+20,btemp+1
  1503  0001D2  C026  F05D         	movff	??_high_isr+19,btemp
  1504  0001D6  C025  FFF5         	movff	??_high_isr+18,tablat
  1505  0001DA  C024  FFF8         	movff	??_high_isr+17,tblptru
  1506  0001DE  C023  FFF7         	movff	??_high_isr+16,tblptrh
  1507  0001E2  C022  FFF6         	movff	??_high_isr+15,tblptrl
  1508  0001E6  C021  FFF4         	movff	??_high_isr+14,prodh
  1509  0001EA  C020  FFF3         	movff	??_high_isr+13,prodl
  1510  0001EE  C01F  FFDA         	movff	??_high_isr+12,fsr2h
  1511  0001F2  C01E  FFD9         	movff	??_high_isr+11,fsr2l
  1512  0001F6  C01D  FFE2         	movff	??_high_isr+10,fsr1h
  1513  0001FA  C01C  FFE1         	movff	??_high_isr+9,fsr1l
  1514  0001FE  C01B  FFEA         	movff	??_high_isr+8,fsr0h
  1515  000202  C01A  FFE9         	movff	??_high_isr+7,fsr0l
  1516  000206  C019  FFFB         	movff	??_high_isr+6,pclatu
  1517  00020A  C018  FFFA         	movff	??_high_isr+5,pclath
  1518  00020E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1519  000210  0011               	retfie		f
  1520  000212                     __end_of_high_isr:
  1521                           	opt stack 0
  1522                           pclatu	equ	0xFFB
  1523                           pclath	equ	0xFFA
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           prodh	equ	0xFF4
  1529                           prodl	equ	0xFF3
  1530                           intcon3	equ	0xFF0
  1531                           postinc0	equ	0xFEE
  1532                           fsr0h	equ	0xFEA
  1533                           fsr0l	equ	0xFE9
  1534                           wreg	equ	0xFE8
  1535                           postdec1	equ	0xFE5
  1536                           fsr1h	equ	0xFE2
  1537                           fsr1l	equ	0xFE1
  1538                           indf2	equ	0xFDF
  1539                           fsr2h	equ	0xFDA
  1540                           fsr2l	equ	0xFD9
  1541                           status	equ	0xFD8
  1542                           
  1543 ;; *************** function _UserInterruptHandler *****************
  1544 ;; Defined at:
  1545 ;;		line 345 in file "firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    3
  1566 ;; This function calls:
  1567 ;;		_DELAY_ms
  1568 ;;		_I2CTask
  1569 ;; This function is called by:
  1570 ;;		_high_isr
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text6
  1575  0012CE                     __ptext6:
  1576                           	opt stack 0
  1577  0012CE                     _UserInterruptHandler:
  1578                           	opt stack 24
  1579                           
  1580                           ;lcd.c: 348: if( PIR3bits.SSP2IF )
  1581                           
  1582                           ;incstack = 0
  1583  0012CE  AEA4               	btfss	4004,7,c	;volatile
  1584  0012D0  0012               	return	
  1585                           
  1586                           ;lcd.c: 349: {
  1587                           ;lcd.c: 350: PIR3bits.SSP2IF = 0;
  1588  0012D2  9EA4               	bcf	4004,7,c	;volatile
  1589                           
  1590                           ;lcd.c: 351: I2CTask();
  1591  0012D4  ECD5  F007         	call	_I2CTask	;wreg free
  1592                           
  1593                           ;lcd.c: 352: DELAY_ms(5);
  1594  0012D8  0E00               	movlw	0
  1595  0012DA  6E0E               	movwf	DELAY_ms@ms+1,c
  1596  0012DC  0E05               	movlw	5
  1597  0012DE  6E0D               	movwf	DELAY_ms@ms,c
  1598  0012E0  EC2D  F008         	call	_DELAY_ms	;wreg free
  1599  0012E4  0012               	return	
  1600  0012E6                     __end_of_UserInterruptHandler:
  1601                           	opt stack 0
  1602                           pclatu	equ	0xFFB
  1603                           pclath	equ	0xFFA
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           prodh	equ	0xFF4
  1609                           prodl	equ	0xFF3
  1610                           intcon3	equ	0xFF0
  1611                           postinc0	equ	0xFEE
  1612                           fsr0h	equ	0xFEA
  1613                           fsr0l	equ	0xFE9
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1h	equ	0xFE2
  1617                           fsr1l	equ	0xFE1
  1618                           indf2	equ	0xFDF
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function _I2CTask *****************
  1624 ;; Defined at:
  1625 ;;		line 65 in file "firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    2
  1646 ;; This function calls:
  1647 ;;		_DELAY_ms
  1648 ;; This function is called by:
  1649 ;;		_UserInterruptHandler
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text7
  1654  000FAA                     __ptext7:
  1655                           	opt stack 0
  1656  000FAA                     _I2CTask:
  1657                           	opt stack 24
  1658                           
  1659                           ;lcd.c: 68: if( CommandPtr < CommandLen || TextPtr < TextLen )
  1660                           
  1661                           ;incstack = 0
  1662  000FAA  504F               	movf	_CommandLen,w,c
  1663  000FAC  5C4D               	subwf	_CommandPtr,w,c
  1664  000FAE  A0D8               	btfss	status,0,c
  1665  000FB0  D004               	goto	i2u525_40
  1666  000FB2  504E               	movf	_TextLen,w,c
  1667  000FB4  5C4C               	subwf	_TextPtr,w,c
  1668  000FB6  B0D8               	btfsc	status,0,c
  1669  000FB8  0012               	return	
  1670  000FBA                     i2u525_40:
  1671                           
  1672                           ;lcd.c: 69: {
  1673                           ;lcd.c: 70: while (SSP2CON2bits.SEN == 1);
  1674  000FBA  B071               	btfsc	3953,0,c	;volatile
  1675  000FBC  D7FE               	goto	i2u525_40
  1676                           
  1677                           ;lcd.c: 71: if( CommandPtr < CommandLen )
  1678  000FBE  504F               	movf	_CommandLen,w,c
  1679  000FC0  5C4D               	subwf	_CommandPtr,w,c
  1680  000FC2  B0D8               	btfsc	status,0,c
  1681  000FC4  D01A               	goto	i2l90
  1682                           
  1683                           ;lcd.c: 72: {
  1684                           ;lcd.c: 73: SSP2BUF = LCDCommand[CommandPtr];
  1685  000FC6  504D               	movf	_CommandPtr,w,c
  1686  000FC8  0D01               	mullw	1
  1687  000FCA  0E82               	movlw	low _LCDCommand
  1688  000FCC  24F3               	addwf	prodl,w,c
  1689  000FCE  6ED9               	movwf	fsr2l,c
  1690  000FD0  0E00               	movlw	high _LCDCommand
  1691  000FD2  20F4               	addwfc	prodh,w,c
  1692  000FD4  6EDA               	movwf	fsr2h,c
  1693  000FD6  50DF               	movf	indf2,w,c
  1694  000FD8  6E75               	movwf	3957,c	;volatile
  1695                           
  1696                           ;lcd.c: 75: {
  1697                           ;lcd.c: 76: CommandPtr++;
  1698  000FDA  2A4D               	incf	_CommandPtr,f,c
  1699                           
  1700                           ;lcd.c: 77: }
  1701                           ;lcd.c: 78: if( CommandPtr == CommandLen && TextLen == 0 )
  1702  000FDC  504F               	movf	_CommandLen,w,c
  1703  000FDE  184D               	xorwf	_CommandPtr,w,c
  1704  000FE0  A4D8               	btfss	status,2,c
  1705  000FE2  0012               	return	
  1706  000FE4  504E               	movf	_TextLen,w,c
  1707  000FE6  A4D8               	btfss	status,2,c
  1708  000FE8  0012               	return	
  1709                           
  1710                           ;lcd.c: 79: {
  1711                           ;lcd.c: 81: SSP2CON2bits.PEN = 1;
  1712  000FEA  8471               	bsf	3953,2,c	;volatile
  1713                           
  1714                           ;lcd.c: 82: DELAY_ms(300);
  1715  000FEC  0E01               	movlw	1
  1716  000FEE  6E0E               	movwf	DELAY_ms@ms+1,c
  1717  000FF0  0E2C               	movlw	44
  1718  000FF2  6E0D               	movwf	DELAY_ms@ms,c
  1719  000FF4  EC2D  F008         	call	_DELAY_ms	;wreg free
  1720                           
  1721                           ;lcd.c: 83: }
  1722                           ;lcd.c: 84: }
  1723  000FF8  0012               	return	
  1724  000FFA                     i2l90:
  1725                           
  1726                           ;lcd.c: 85: else if( TextPtr < TextLen )
  1727  000FFA  504E               	movf	_TextLen,w,c
  1728  000FFC  5C4C               	subwf	_TextPtr,w,c
  1729  000FFE  B0D8               	btfsc	status,0,c
  1730  001000  0012               	return	
  1731                           
  1732                           ;lcd.c: 86: {
  1733                           ;lcd.c: 87: if( LCDText[TextPtr] == 0 )
  1734  001002  504C               	movf	_TextPtr,w,c
  1735  001004  0D01               	mullw	1
  1736  001006  0E7B               	movlw	low _LCDText
  1737  001008  24F3               	addwf	prodl,w,c
  1738  00100A  6ED9               	movwf	fsr2l,c
  1739  00100C  0E01               	movlw	high _LCDText
  1740  00100E  20F4               	addwfc	prodh,w,c
  1741  001010  6EDA               	movwf	fsr2h,c
  1742  001012  50DF               	movf	indf2,w,c
  1743  001014  A4D8               	btfss	status,2,c
  1744  001016  D00A               	goto	i2l94
  1745                           
  1746                           ;lcd.c: 88: {
  1747                           ;lcd.c: 89: LCDText[TextPtr] = ' ';
  1748  001018  504C               	movf	_TextPtr,w,c
  1749  00101A  0D01               	mullw	1
  1750  00101C  0E7B               	movlw	low _LCDText
  1751  00101E  24F3               	addwf	prodl,w,c
  1752  001020  6ED9               	movwf	fsr2l,c
  1753  001022  0E01               	movlw	high _LCDText
  1754  001024  20F4               	addwfc	prodh,w,c
  1755  001026  6EDA               	movwf	fsr2h,c
  1756  001028  0E20               	movlw	32
  1757  00102A  6EDF               	movwf	indf2,c
  1758  00102C                     i2l94:
  1759                           
  1760                           ;lcd.c: 90: }
  1761                           ;lcd.c: 91: SSP2BUF = LCDText[TextPtr];
  1762  00102C  504C               	movf	_TextPtr,w,c
  1763  00102E  0D01               	mullw	1
  1764  001030  0E7B               	movlw	low _LCDText
  1765  001032  24F3               	addwf	prodl,w,c
  1766  001034  6ED9               	movwf	fsr2l,c
  1767  001036  0E01               	movlw	high _LCDText
  1768  001038  20F4               	addwfc	prodh,w,c
  1769  00103A  6EDA               	movwf	fsr2h,c
  1770  00103C  50DF               	movf	indf2,w,c
  1771  00103E  6E75               	movwf	3957,c	;volatile
  1772                           
  1773                           ;lcd.c: 94: {
  1774                           ;lcd.c: 95: TextPtr++;
  1775  001040  2A4C               	incf	_TextPtr,f,c
  1776                           
  1777                           ;lcd.c: 96: }
  1778                           ;lcd.c: 97: if( TextPtr == TextLen )
  1779  001042  504E               	movf	_TextLen,w,c
  1780  001044  184C               	xorwf	_TextPtr,w,c
  1781  001046  A4D8               	btfss	status,2,c
  1782  001048  0012               	return	
  1783                           
  1784                           ;lcd.c: 98: {
  1785                           ;lcd.c: 100: SSP2CON2bits.PEN = 1;
  1786  00104A  8471               	bsf	3953,2,c	;volatile
  1787                           
  1788                           ;lcd.c: 101: DELAY_ms(300);
  1789  00104C  0E01               	movlw	1
  1790  00104E  6E0E               	movwf	DELAY_ms@ms+1,c
  1791  001050  0E2C               	movlw	44
  1792  001052  6E0D               	movwf	DELAY_ms@ms,c
  1793  001054  EC2D  F008         	call	_DELAY_ms	;wreg free
  1794  001058  0012               	return	
  1795  00105A                     __end_of_I2CTask:
  1796                           	opt stack 0
  1797                           pclatu	equ	0xFFB
  1798                           pclath	equ	0xFFA
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           intcon3	equ	0xFF0
  1806                           postinc0	equ	0xFEE
  1807                           fsr0h	equ	0xFEA
  1808                           fsr0l	equ	0xFE9
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           indf2	equ	0xFDF
  1814                           fsr2h	equ	0xFDA
  1815                           fsr2l	equ	0xFD9
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function _DELAY_ms *****************
  1819 ;; Defined at:
  1820 ;;		line 108 in file "firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  ms              2   12[COMRAM] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  cyclesRequir    4   14[COMRAM] long 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;Total ram usage:        6 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    1
  1841 ;; This function calls:
  1842 ;;		___lmul
  1843 ;; This function is called by:
  1844 ;;		_I2CTask
  1845 ;;		_UserInterruptHandler
  1846 ;;		_LCD_Initialize
  1847 ;;		_LCDDisplay
  1848 ;;		_LCDBacklightON
  1849 ;;		_LCDBacklightOFF
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text8
  1854  00105A                     __ptext8:
  1855                           	opt stack 0
  1856  00105A                     _DELAY_ms:
  1857                           	opt stack 24
  1858                           
  1859                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  1860                           
  1861                           ;incstack = 0
  1862  00105A  0E00               	movlw	0
  1863  00105C  6E0F               	movwf	DELAY_ms@cyclesRequiredForEntireDelay,c
  1864  00105E  0E00               	movlw	0
  1865  001060  6E10               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+1,c
  1866  001062  0E00               	movlw	0
  1867  001064  6E11               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+2,c
  1868  001066  0E00               	movlw	0
  1869  001068  6E12               	movwf	DELAY_ms@cyclesRequiredForEntireDelay+3,c
  1870                           
  1871                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  1872  00106A  C00D  F001         	movff	DELAY_ms@ms,___lmul@multiplier
  1873  00106E  C00E  F002         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
  1874  001072  6A03               	clrf	___lmul@multiplier+2,c
  1875  001074  6A04               	clrf	___lmul@multiplier+3,c
  1876  001076  0EA0               	movlw	160
  1877  001078  6E05               	movwf	___lmul@multiplicand,c
  1878  00107A  0E0F               	movlw	15
  1879  00107C  6E06               	movwf	___lmul@multiplicand+1,c
  1880  00107E  0E00               	movlw	0
  1881  001080  6E07               	movwf	___lmul@multiplicand+2,c
  1882  001082  0E00               	movlw	0
  1883  001084  6E08               	movwf	___lmul@multiplicand+3,c
  1884  001086  ECB8  F008         	call	___lmul	;wreg free
  1885  00108A  C001  F00F         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
  1886  00108E  C002  F010         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
  1887  001092  C003  F011         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
  1888  001096  C004  F012         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
  1889                           
  1890                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  1891  00109A  0E56               	movlw	86
  1892  00109C  260F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
  1893  00109E  0EFF               	movlw	255
  1894  0010A0  2210               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  1895  0010A2  0EFF               	movlw	255
  1896  0010A4  2211               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  1897  0010A6  0EFF               	movlw	255
  1898  0010A8  2212               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  1899                           
  1900                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  1901  0010AA  BE12               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  1902  0010AC  0012               	return	
  1903  0010AE  5012               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  1904  0010B0  1011               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  1905  0010B2  1010               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  1906  0010B4  E10E               	bnz	i2l43
  1907  0010B6  0EC4               	movlw	196
  1908  0010B8  5C0F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
  1909  0010BA  A0D8               	btfss	status,0,c
  1910  0010BC  0012               	return	
  1911  0010BE  D009               	goto	i2l43
  1912  0010C0                     i2l44:
  1913                           
  1914                           ;delay.c: 128: {
  1915                           ;delay.c: 129: __nop();
  1916  0010C0  F000               	nop	
  1917                           
  1918                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  1919  0010C2  0ED9               	movlw	217
  1920  0010C4  260F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
  1921  0010C6  0EFF               	movlw	255
  1922  0010C8  2210               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  1923  0010CA  0EFF               	movlw	255
  1924  0010CC  2211               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  1925  0010CE  0EFF               	movlw	255
  1926  0010D0  2212               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  1927  0010D2                     i2l43:
  1928  0010D2  BE12               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  1929  0010D4  0012               	return	
  1930  0010D6  5012               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  1931  0010D8  1011               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  1932  0010DA  1010               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  1933  0010DC  E1F1               	bnz	i2l44
  1934  0010DE  040F               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
  1935  0010E0  A0D8               	btfss	status,0,c
  1936  0010E2  0012               	return	
  1937  0010E4  D7ED               	goto	i2l44
  1938  0010E6                     __end_of_DELAY_ms:
  1939                           	opt stack 0
  1940                           pclatu	equ	0xFFB
  1941                           pclath	equ	0xFFA
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           intcon3	equ	0xFF0
  1949                           postinc0	equ	0xFEE
  1950                           fsr0h	equ	0xFEA
  1951                           fsr0l	equ	0xFE9
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1h	equ	0xFE2
  1955                           fsr1l	equ	0xFE1
  1956                           indf2	equ	0xFDF
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function ___lmul *****************
  1962 ;; Defined at:
  1963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  multiplier      4    0[COMRAM] unsigned long 
  1966 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  product         4    8[COMRAM] unsigned long 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  4    0[COMRAM] unsigned long 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1978 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;Total ram usage:       12 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_DELAY_ms
  1988 ;;		_DELAY_10us
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text9
  1993  001170                     __ptext9:
  1994                           	opt stack 0
  1995  001170                     ___lmul:
  1996                           	opt stack 24
  1997                           
  1998                           ;incstack = 0
  1999  001170  0E00               	movlw	0
  2000  001172  6E09               	movwf	___lmul@product,c
  2001  001174  0E00               	movlw	0
  2002  001176  6E0A               	movwf	___lmul@product+1,c
  2003  001178  0E00               	movlw	0
  2004  00117A  6E0B               	movwf	___lmul@product+2,c
  2005  00117C  0E00               	movlw	0
  2006  00117E  6E0C               	movwf	___lmul@product+3,c
  2007  001180  A001               	btfss	___lmul@multiplier,0,c
  2008  001182  D008               	goto	i2l1270
  2009  001184  5005               	movf	___lmul@multiplicand,w,c
  2010  001186  2609               	addwf	___lmul@product,f,c
  2011  001188  5006               	movf	___lmul@multiplicand+1,w,c
  2012  00118A  220A               	addwfc	___lmul@product+1,f,c
  2013  00118C  5007               	movf	___lmul@multiplicand+2,w,c
  2014  00118E  220B               	addwfc	___lmul@product+2,f,c
  2015  001190  5008               	movf	___lmul@multiplicand+3,w,c
  2016  001192  220C               	addwfc	___lmul@product+3,f,c
  2017  001194                     i2l1270:
  2018  001194  90D8               	bcf	status,0,c
  2019  001196  3605               	rlcf	___lmul@multiplicand,f,c
  2020  001198  3606               	rlcf	___lmul@multiplicand+1,f,c
  2021  00119A  3607               	rlcf	___lmul@multiplicand+2,f,c
  2022  00119C  3608               	rlcf	___lmul@multiplicand+3,f,c
  2023  00119E  90D8               	bcf	status,0,c
  2024  0011A0  3204               	rrcf	___lmul@multiplier+3,f,c
  2025  0011A2  3203               	rrcf	___lmul@multiplier+2,f,c
  2026  0011A4  3202               	rrcf	___lmul@multiplier+1,f,c
  2027  0011A6  3201               	rrcf	___lmul@multiplier,f,c
  2028  0011A8  5001               	movf	___lmul@multiplier,w,c
  2029  0011AA  1002               	iorwf	___lmul@multiplier+1,w,c
  2030  0011AC  1003               	iorwf	___lmul@multiplier+2,w,c
  2031  0011AE  1004               	iorwf	___lmul@multiplier+3,w,c
  2032  0011B0  A4D8               	btfss	status,2,c
  2033  0011B2  D7E6               	goto	i2l1269
  2034  0011B4  C009  F001         	movff	___lmul@product,?___lmul
  2035  0011B8  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2036  0011BC  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2037  0011C0  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2038  0011C4  0012               	return		;funcret
  2039  0011C6                     __end_of___lmul:
  2040                           	opt stack 0
  2041                           pclatu	equ	0xFFB
  2042                           pclath	equ	0xFFA
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon3	equ	0xFF0
  2050                           postinc0	equ	0xFEE
  2051                           fsr0h	equ	0xFEA
  2052                           fsr0l	equ	0xFE9
  2053                           wreg	equ	0xFE8
  2054                           postdec1	equ	0xFE5
  2055                           fsr1h	equ	0xFE2
  2056                           fsr1l	equ	0xFE1
  2057                           indf2	equ	0xFDF
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _PHYSetShortRAMAddr *****************
  2063 ;; Defined at:
  2064 ;;		line 124 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  address         1    wreg     unsigned char 
  2067 ;;  value           1    2[COMRAM] unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  address         1    3[COMRAM] unsigned char 
  2070 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;Total ram usage:        3 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    1
  2087 ;; This function calls:
  2088 ;;		_SPIPut
  2089 ;; This function is called by:
  2090 ;;		_high_isr
  2091 ;;		_InitMRF24J40
  2092 ;;		_MiMAC_SendPacket
  2093 ;;		_MiMAC_SetChannel
  2094 ;;		_MiMAC_SetAltAddress
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text10
  2099  001274                     __ptext10:
  2100                           	opt stack 0
  2101  001274                     _PHYSetShortRAMAddr:
  2102                           	opt stack 26
  2103                           
  2104                           ;incstack = 0
  2105                           ;PHYSetShortRAMAddr@address stored from wreg
  2106  001274  6E04               	movwf	PHYSetShortRAMAddr@address,c
  2107                           
  2108                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2109  001276  0E00               	movlw	0
  2110  001278  B6F0               	btfsc	intcon3,3,c	;volatile
  2111  00127A  0E01               	movlw	1
  2112  00127C  6E05               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
  2113                           
  2114                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
  2115  00127E  96F0               	bcf	intcon3,3,c	;volatile
  2116                           
  2117                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
  2118  001280  968A               	bcf	3978,3,c	;volatile
  2119                           
  2120                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
  2121  001282  5004               	movf	PHYSetShortRAMAddr@address,w,c
  2122  001284  EC4E  F009         	call	_SPIPut
  2123                           
  2124                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
  2125  001288  5003               	movf	PHYSetShortRAMAddr@value,w,c
  2126  00128A  EC4E  F009         	call	_SPIPut
  2127                           
  2128                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
  2129  00128E  868A               	bsf	3978,3,c	;volatile
  2130                           
  2131                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
  2132  001290  B005               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
  2133  001292  D002               	bra	i2u691_45
  2134  001294  96F0               	bcf	intcon3,3,c	;volatile
  2135  001296  D001               	bra	i2u691_46
  2136  001298                     i2u691_45:
  2137  001298  86F0               	bsf	intcon3,3,c	;volatile
  2138  00129A                     i2u691_46:
  2139  00129A  0012               	return		;funcret
  2140  00129C                     __end_of_PHYSetShortRAMAddr:
  2141                           	opt stack 0
  2142                           pclatu	equ	0xFFB
  2143                           pclath	equ	0xFFA
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           prodh	equ	0xFF4
  2149                           prodl	equ	0xFF3
  2150                           intcon3	equ	0xFF0
  2151                           postinc0	equ	0xFEE
  2152                           fsr0h	equ	0xFEA
  2153                           fsr0l	equ	0xFE9
  2154                           wreg	equ	0xFE8
  2155                           postdec1	equ	0xFE5
  2156                           fsr1h	equ	0xFE2
  2157                           fsr1l	equ	0xFE1
  2158                           indf2	equ	0xFDF
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _PHYGetShortRAMAddr *****************
  2164 ;; Defined at:
  2165 ;;		line 154 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  address         1    wreg     unsigned char 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  address         1    2[COMRAM] unsigned char 
  2170 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  2171 ;;  toReturn        1    3[COMRAM] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      unsigned char 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;Total ram usage:        3 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		_SPIGet
  2190 ;;		_SPIPut
  2191 ;; This function is called by:
  2192 ;;		_high_isr
  2193 ;;		_InitMRF24J40
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text11
  2198  00124A                     __ptext11:
  2199                           	opt stack 0
  2200  00124A                     _PHYGetShortRAMAddr:
  2201                           	opt stack 25
  2202                           
  2203                           ;incstack = 0
  2204                           ;PHYGetShortRAMAddr@address stored from wreg
  2205  00124A  6E03               	movwf	PHYGetShortRAMAddr@address,c
  2206                           
  2207                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
  2208                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2209  00124C  0E00               	movlw	0
  2210  00124E  B6F0               	btfsc	intcon3,3,c	;volatile
  2211  001250  0E01               	movlw	1
  2212  001252  6E05               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
  2213                           
  2214                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
  2215  001254  96F0               	bcf	intcon3,3,c	;volatile
  2216                           
  2217                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
  2218  001256  968A               	bcf	3978,3,c	;volatile
  2219                           
  2220                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
  2221  001258  5003               	movf	PHYGetShortRAMAddr@address,w,c
  2222  00125A  EC4E  F009         	call	_SPIPut
  2223                           
  2224                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
  2225  00125E  EC82  F009         	call	_SPIGet	;wreg free
  2226  001262  6E04               	movwf	PHYGetShortRAMAddr@toReturn,c
  2227                           
  2228                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
  2229  001264  868A               	bsf	3978,3,c	;volatile
  2230                           
  2231                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
  2232  001266  B005               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
  2233  001268  D002               	bra	i2u692_45
  2234  00126A  96F0               	bcf	intcon3,3,c	;volatile
  2235  00126C  D001               	bra	i2u692_46
  2236  00126E                     i2u692_45:
  2237  00126E  86F0               	bsf	intcon3,3,c	;volatile
  2238  001270                     i2u692_46:
  2239                           
  2240                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
  2241  001270  5004               	movf	PHYGetShortRAMAddr@toReturn,w,c
  2242  001272  0012               	return	
  2243  001274                     __end_of_PHYGetShortRAMAddr:
  2244                           	opt stack 0
  2245                           pclatu	equ	0xFFB
  2246                           pclath	equ	0xFFA
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           prodh	equ	0xFF4
  2252                           prodl	equ	0xFF3
  2253                           intcon3	equ	0xFF0
  2254                           postinc0	equ	0xFEE
  2255                           fsr0h	equ	0xFEA
  2256                           fsr0l	equ	0xFE9
  2257                           wreg	equ	0xFE8
  2258                           postdec1	equ	0xFE5
  2259                           fsr1h	equ	0xFE2
  2260                           fsr1l	equ	0xFE1
  2261                           indf2	equ	0xFDF
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _PHYGetLongRAMAddr *****************
  2267 ;; Defined at:
  2268 ;;		line 185 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  address         2    2[COMRAM] unsigned int 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  tmpRFIE         1    7[COMRAM] volatile unsigned char 
  2273 ;;  toReturn        1    6[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      unsigned char 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		_SPIGet
  2292 ;;		_SPIPut
  2293 ;; This function is called by:
  2294 ;;		_high_isr
  2295 ;;		_InitMRF24J40
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text12
  2300  0011C6                     __ptext12:
  2301                           	opt stack 0
  2302  0011C6                     _PHYGetLongRAMAddr:
  2303                           	opt stack 25
  2304                           
  2305                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
  2306                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  2307                           
  2308                           ;incstack = 0
  2309  0011C6  0E00               	movlw	0
  2310  0011C8  B6F0               	btfsc	intcon3,3,c	;volatile
  2311  0011CA  0E01               	movlw	1
  2312  0011CC  6E08               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
  2313                           
  2314                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
  2315  0011CE  96F0               	bcf	intcon3,3,c	;volatile
  2316                           
  2317                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
  2318  0011D0  968A               	bcf	3978,3,c	;volatile
  2319                           
  2320                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
  2321  0011D2  C003  F005         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
  2322  0011D6  C004  F006         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
  2323  0011DA  90D8               	bcf	status,0,c
  2324  0011DC  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2325  0011DE  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2326  0011E0  90D8               	bcf	status,0,c
  2327  0011E2  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2328  0011E4  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2329  0011E6  90D8               	bcf	status,0,c
  2330  0011E8  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  2331  0011EA  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  2332  0011EC  5005               	movf	??_PHYGetLongRAMAddr,w,c
  2333  0011EE  0B7F               	andlw	127
  2334  0011F0  0980               	iorlw	128
  2335  0011F2  EC4E  F009         	call	_SPIPut
  2336                           
  2337                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
  2338  0011F6  3803               	swapf	PHYGetLongRAMAddr@address,w,c
  2339  0011F8  46E8               	rlncf	wreg,f,c
  2340  0011FA  0BE0               	andlw	224
  2341  0011FC  0BE0               	andlw	224
  2342  0011FE  EC4E  F009         	call	_SPIPut
  2343                           
  2344                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
  2345  001202  EC82  F009         	call	_SPIGet	;wreg free
  2346  001206  6E07               	movwf	PHYGetLongRAMAddr@toReturn,c
  2347                           
  2348                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
  2349  001208  868A               	bsf	3978,3,c	;volatile
  2350                           
  2351                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
  2352  00120A  B008               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
  2353  00120C  D002               	bra	i2u693_45
  2354  00120E  96F0               	bcf	intcon3,3,c	;volatile
  2355  001210  D001               	bra	i2u693_46
  2356  001212                     i2u693_45:
  2357  001212  86F0               	bsf	intcon3,3,c	;volatile
  2358  001214                     i2u693_46:
  2359                           
  2360                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
  2361  001214  5007               	movf	PHYGetLongRAMAddr@toReturn,w,c
  2362  001216  0012               	return	
  2363  001218                     __end_of_PHYGetLongRAMAddr:
  2364                           	opt stack 0
  2365                           pclatu	equ	0xFFB
  2366                           pclath	equ	0xFFA
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon3	equ	0xFF0
  2374                           postinc0	equ	0xFEE
  2375                           fsr0h	equ	0xFEA
  2376                           fsr0l	equ	0xFE9
  2377                           wreg	equ	0xFE8
  2378                           postdec1	equ	0xFE5
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           fsr2h	equ	0xFDA
  2383                           fsr2l	equ	0xFD9
  2384                           status	equ	0xFD8
  2385                           
  2386 ;; *************** function _SPIGet *****************
  2387 ;; Defined at:
  2388 ;;		line 102 in file "firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      unsigned char 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		_SPIPut
  2411 ;; This function is called by:
  2412 ;;		_PHYGetShortRAMAddr
  2413 ;;		_PHYGetLongRAMAddr
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text13
  2418  001304                     __ptext13:
  2419                           	opt stack 0
  2420  001304                     _SPIGet:
  2421                           	opt stack 25
  2422                           
  2423                           ;spi.c: 123: SPIPut(0x00);
  2424                           
  2425                           ;incstack = 0
  2426  001304  0E00               	movlw	0
  2427  001306  EC4E  F009         	call	_SPIPut
  2428                           
  2429                           ;spi.c: 124: return SSP1BUF;
  2430  00130A  50C9               	movf	4041,w,c	;volatile
  2431  00130C  0012               	return	
  2432  00130E                     __end_of_SPIGet:
  2433                           	opt stack 0
  2434                           pclatu	equ	0xFFB
  2435                           pclath	equ	0xFFA
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           intcon3	equ	0xFF0
  2443                           postinc0	equ	0xFEE
  2444                           fsr0h	equ	0xFEA
  2445                           fsr0l	equ	0xFE9
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _SPIPut *****************
  2456 ;; Defined at:
  2457 ;;		line 45 in file "firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  v               1    wreg     unsigned char 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  v               1    1[COMRAM] unsigned char 
  2462 ;;  i               1    0[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_SPIGet
  2482 ;;		_PHYSetShortRAMAddr
  2483 ;;		_PHYGetShortRAMAddr
  2484 ;;		_PHYGetLongRAMAddr
  2485 ;;		_PHYSetLongRAMAddr
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text14
  2490  00129C                     __ptext14:
  2491                           	opt stack 0
  2492  00129C                     _SPIPut:
  2493                           	opt stack 26
  2494                           
  2495                           ;incstack = 0
  2496                           ;SPIPut@v stored from wreg
  2497  00129C  6E02               	movwf	SPIPut@v,c
  2498                           
  2499                           ;spi.c: 64: {
  2500                           ;spi.c: 66: uint8_t i;
  2501                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
  2502  00129E  969E               	bcf	3998,3,c	;volatile
  2503                           
  2504                           ;spi.c: 70: i = SSP1BUF;
  2505  0012A0  CFC9 F001          	movff	4041,SPIPut@i	;volatile
  2506  0012A4                     i2l147:
  2507                           
  2508                           ;spi.c: 73: {
  2509                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
  2510  0012A4  9EC6               	bcf	4038,7,c	;volatile
  2511                           
  2512                           ;spi.c: 75: SSP1BUF = v;
  2513  0012A6  C002  FFC9         	movff	SPIPut@v,4041	;volatile
  2514                           
  2515                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
  2516  0012AA  BEC6               	btfsc	4038,7,c	;volatile
  2517  0012AC  D7FB               	goto	i2l147
  2518  0012AE                     i2u510_40:
  2519                           
  2520                           ;spi.c: 78: while( PIR1bits.SSP1IF == 0 );
  2521  0012AE  A69E               	btfss	3998,3,c	;volatile
  2522  0012B0  D7FE               	goto	i2u510_40
  2523                           
  2524                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
  2525  0012B2  969E               	bcf	3998,3,c	;volatile
  2526  0012B4  0012               	return		;funcret
  2527  0012B6                     __end_of_SPIPut:
  2528                           	opt stack 0
  2529                           pclatu	equ	0xFFB
  2530                           pclath	equ	0xFFA
  2531                           tblptru	equ	0xFF8
  2532                           tblptrh	equ	0xFF7
  2533                           tblptrl	equ	0xFF6
  2534                           tablat	equ	0xFF5
  2535                           prodh	equ	0xFF4
  2536                           prodl	equ	0xFF3
  2537                           intcon3	equ	0xFF0
  2538                           postinc0	equ	0xFEE
  2539                           fsr0h	equ	0xFEA
  2540                           fsr0l	equ	0xFE9
  2541                           wreg	equ	0xFE8
  2542                           postdec1	equ	0xFE5
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           indf2	equ	0xFDF
  2546                           fsr2h	equ	0xFDA
  2547                           fsr2l	equ	0xFD9
  2548                           status	equ	0xFD8
  2549                           pclatu	equ	0xFFB
  2550                           pclath	equ	0xFFA
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           prodh	equ	0xFF4
  2556                           prodl	equ	0xFF3
  2557                           intcon3	equ	0xFF0
  2558                           postinc0	equ	0xFEE
  2559                           fsr0h	equ	0xFEA
  2560                           fsr0l	equ	0xFE9
  2561                           wreg	equ	0xFE8
  2562                           postdec1	equ	0xFE5
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570                           	psect	rparam
  2571  0000                     pclatu	equ	0xFFB
  2572                           pclath	equ	0xFFA
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon3	equ	0xFF0
  2580                           postinc0	equ	0xFEE
  2581                           fsr0h	equ	0xFEA
  2582                           fsr0l	equ	0xFE9
  2583                           wreg	equ	0xFE8
  2584                           postdec1	equ	0xFE5
  2585                           fsr1h	equ	0xFE2
  2586                           fsr1l	equ	0xFE1
  2587                           indf2	equ	0xFDF
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592                           	psect	temp
  2593  00005D                     btemp:
  2594                           	opt stack 0
  2595  00005D                     	ds	1
  2596  0000                     int$flags	set	btemp
  2597  0000                     wtemp6	set	btemp+1
  2598                           pclatu	equ	0xFFB
  2599                           pclath	equ	0xFFA
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           prodh	equ	0xFF4
  2605                           prodl	equ	0xFF3
  2606                           intcon3	equ	0xFF0
  2607                           postinc0	equ	0xFEE
  2608                           fsr0h	equ	0xFEA
  2609                           fsr0l	equ	0xFE9
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           indf2	equ	0xFDF
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    90
    Data        11
    BSS         1118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      92
    BANK0           160      2     149
    BANK1           256      0     156
    BANK2           256      0     140
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S1569$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK0[8]), 

    S1475$Payload	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer(BIGRAM[640]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer.Payload(BIGRAM[79]), RxBuffer(BIGRAM[640]), 

    S1475$SourceAddress	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer(BIGRAM[640]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer.Payload(BIGRAM[79]), RxBuffer(BIGRAM[640]), 

    S1458$DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable.AltAddress(BANK1[2]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), 
		 -> openSocketInfo.ShortAddress1(BANK0[2]), openSocketInfo(BANK0[26]), MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    S1368$Payload	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer(BIGRAM[640]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer.Payload(BIGRAM[79]), RxBuffer(BIGRAM[640]), 

    S1368$SourceAddress	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer(BIGRAM[640]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 640
		 -> RxBuffer.Payload(BIGRAM[79]), RxBuffer(BIGRAM[640]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _UserInterruptHandler->_DELAY_ms
    _I2CTask->_DELAY_ms
    _DELAY_ms->___lmul
    _PHYSetShortRAMAddr->_SPIPut
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut

Critical Paths under _main in BANK0

    _main->_uartRead
    _uartRead->_uartWrite

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     117
                     _uartInitialize
                           _uartRead
                          _uartWrite
 ---------------------------------------------------------------------------------
 (1) _uartRead                                             1     1      0      95
                                              1 BANK0      1     1      0
                          _uartWrite
                _vT100EraseEndOfLine
 ---------------------------------------------------------------------------------
 (2) _vT100EraseEndOfLine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartWrite                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uartInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            28    28      0    6401
                                             18 COMRAM    28    28      0
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
               _UserInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _UserInterruptHandler                                 0     0      0    3120
                           _DELAY_ms
                            _I2CTask
 ---------------------------------------------------------------------------------
 (5) _I2CTask                                              0     0      0    1560
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             6     4      2    1560
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     600
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _PHYSetShortRAMAddr                                   3     2      1    2404
                                              2 COMRAM     3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _PHYGetShortRAMAddr                                   3     3      0     114
                                              2 COMRAM     3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _PHYGetLongRAMAddr                                    6     4      2     403
                                              2 COMRAM     6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _SPIGet                                               0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (5) _SPIPut                                               2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uartInitialize
   _uartRead
     _uartWrite
     _vT100EraseEndOfLine
   _uartWrite

 _high_isr (ROOT)
   _PHYGetLongRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYGetShortRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYSetShortRAMAddr
     _SPIPut
   _UserInterruptHandler
     _DELAY_ms
       ___lmul
     _I2CTask
       _DELAY_ms
         ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     280      35       17.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      8C      10       54.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      9C       8       60.9%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      95       5       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219       6        0.0%
DATA                 0      0     499       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 18 18:45:42 2019

                        _RoutingTable 0072                     _ActiveScanResults 0200  
                                 _MTP 003A           __size_of_PHYSetShortRAMAddr 0028  
                     __end_of_I2CTask 105A                                   prod 000FF3  
                                 wreg 000FE8                            _TXSTA2bits 000FA8  
                                l1109 12F4                                  l1071 1220  
                                l8652 12FA                                  STR_1 0F8E  
                                STR_2 0F7D                                  STR_3 0F9F  
                                STR_4 0F5B                                  STR_5 0F6C  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATD 000F8C                                  _LATE 000F8D  
                                i2l43 10D2                                  i2l44 10C0  
                                i2l90 0FFA                                  i2l94 102C  
                                _main 12E6                                  _role 0044  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  fsr0l 000FE9  
                                indf2 000FDF                                  fsr1l 000FE1  
                                fsr2l 000FD9                                  btemp 005D  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0212                      __end_of_DELAY_ms 10E6  
                        ___param_bank 000000                     _PHYGetLongRAMAddr 11C6  
                  ?_PHYGetLongRAMAddr 0003                         __CFG_PLLDIV$2 000000  
                        _BAUDCON1bits 000F7E           __end_of_vT100EraseEndOfLine 131C  
                               ?_main 0001                                 _T1CON 000FCD  
                               i2l147 12A4                   ??_PHYGetLongRAMAddr 0005  
                               _TMR1H 000FCF                                 _TMR0L 000FD6  
                               _TMR1L 000FCE                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
                          _CommandLen 004F                            _CommandPtr 004D  
                 ___lmul@multiplicand 0005                            _MiWiSeqNum 0045  
                      _myShortAddress 0056            __end_of_PHYGetShortRAMAddr 1274  
                     __end_of_dpowers 0F53                                 pclath 000FFA  
                               tablat 000FF5                                 status 000FD8  
                               wtemp6 005E             __end_of_PHYGetLongRAMAddr 1218  
                     __initialization 10E6                          __end_of_main 12F6  
                       high_isr@flags 002B                     _MACCurrentChannel 0095  
           PHYGetShortRAMAddr@address 0003                             ??_I2CTask 0013  
                      __CFG_OSC$HSPLL 000000                      __end_of_ScanTime 0F3D  
                              ??_main 00F5                         __activetblptr 000002  
           PHYGetShortRAMAddr@tmpRFIE 0005             PHYSetShortRAMAddr@address 0004  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                                i2l1030 013C  
                              i2l1022 0088                                i2l1031 0108  
                              i2l1033 018A                                i2l1025 009A  
                              i2l1034 01A0                                i2l1035 01AE  
                              i2l1027 00B6                                i2l1028 0196  
                              i2l1029 0180                                i2l1038 01C2  
                              i2l1270 1194                                i2l1269 1180  
                      __CFG_WDTEN$OFF 000000                                _INTCON 000FF2  
                              i2l8524 0092                                _RCREG2 000FAA  
                              _RCSTA2 000F9C                                _OSCCON 000FD3  
                              _SPBRG2 000FAB                                _RPINR1 000EE7  
                              _RPOR17 000ED7                                _SPIGet 1304  
                              _SPIPut 129C                                _TXREG2 000FA9  
           PHYSetShortRAMAddr@tmpRFIE 0005                                _TXSTA2 000FA8  
       __size_of_UserInterruptHandler 0018                        __CFG_XINST$OFF 000000  
                              _TxData 0047                      __end_of_high_isr 0212  
                              ___lmul 1170                                clear_0 1126  
                              clear_1 1138                                clear_2 1144  
                              clear_3 1150                                clear_4 115C  
                        __pdataCOMRAM 005B                      __end_of_uartRead 124A  
                      _openSocketInfo 00CE                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                             ?_DELAY_ms 000D  
                          __accesstop 0060               __end_of__initialization 1162  
                       ___rparam_used 000001            __size_of_PHYGetLongRAMAddr 0052  
               _ActiveScanResultIndex 0049                        __pcstackCOMRAM 0001  
                      high_isr@RxBank 002D                          __pidataBANK0 130E  
                     _ConnectionTable 0120                            ??_DELAY_ms 000F  
             __size_of_uartInitialize 0018                            __pbssBANK0 0060  
                          __pbssBANK1 0100                            __pbssBANK2 0200  
                             ?_SPIGet 0001                               ?_SPIPut 0001  
          PHYGetShortRAMAddr@toReturn 0004                               ?___lmul 0001  
                             _I2CTask 0FAA                        ___lmul@product 0009  
                             SPIPut@i 0001                               SPIPut@v 0002  
          __end_of_PHYSetShortRAMAddr 129C                    __size_of_uartWrite 000E  
                             _LCDText 017B                               _SPBRGH2 000F7D  
                             _RPINR16 000EF6                        _failureCounter 0091  
                             _SSP2ADD 000F74                               _SSP1BUF 000FC9  
                             _SSP2BUF 000F75                             ?_high_isr 0001  
                     _timerExtension1 004B                       _timerExtension2 009A  
                     __size_of_SPIGet 000A                       __size_of_SPIPut 001A  
                  _PHYGetShortRAMAddr 124A                            DELAY_ms@ms 000D  
                 _AcknowledgementAddr 0093                               __Hparam 0000  
                             __Lparam 0000                             ?_uartRead 0001  
                             _TextLen 004E                               _TextPtr 004C  
                     __size_of___lmul 0056                   ?_PHYGetShortRAMAddr 0001  
                        __psmallconst 0F00                        _tempNodeStatus 0048  
                             __pcinit 10E6                               __ramtop 0F00  
                             __ptext0 12E6                               __ptext1 1218  
                             __ptext2 131A                               __ptext3 12F6  
                             __ptext4 12B6                               __ptext6 12CE  
                             __ptext7 0FAA                               __ptext8 105A  
                             __ptext9 1170                               _myPANID 0054  
                   __end_of_hexpowers 0F5B                             _T1CONbits 000FCD  
                             _dpowers 0F49                         _myLongAddress 00EB  
                           _MAC_PANID 0052          __size_of_vT100EraseEndOfLine 0002  
                         uartRead@val 00F4                  ??_PHYGetShortRAMAddr 0003  
                          ??_high_isr 0013                  end_of_initialization 1162  
                    _MiWiStateMachine 0041                     __end_of_octpowers 0F49  
                       __Lmediumconst 0000                     __end_of_uartWrite 1304  
                          ??_uartRead 00F4                               postdec1 000FE5  
                             postinc0 000FEE  DELAY_ms@cyclesRequiredForEntireDelay 000F  
                           _PORTBbits 000F81          __end_of_UserInterruptHandler 12E6  
                           _TRISAbits 000F92                             _TRISBbits 000F93  
                           _TRISCbits 000F94                             _TRISDbits 000F95  
                      _uartInitialize 12B6                             _BankIndex 005B  
                   __size_of_DELAY_ms 008C                        __end_of_SPIGet 130E  
                      __end_of_SPIPut 12B6                        __end_of___lmul 11C6  
            PHYGetLongRAMAddr@address 0003                         __pidataCOMRAM 1317  
              __end_of_uartInitialize 12CE                   start_initialization 10E6  
            PHYGetLongRAMAddr@tmpRFIE 0008                       high_isr@results 002A  
                            ??_SPIGet 0003                              ??_SPIPut 0001  
                      _currentChannel 005A                              ??___lmul 0009  
                         __pdataBANK0 00EA                              ?_I2CTask 0001  
                         __pbssBIGRAM 028C                           __pbssCOMRAM 002F  
                     ?_uartInitialize 0001                         __pcstackBANK0 00F3  
                         _defaultHops 005C                    _PHYSetShortRAMAddr 1274  
             PHYSetShortRAMAddr@value 0003                     __size_of_high_isr 020A  
                 ?_PHYSetShortRAMAddr 0003                  _UserInterruptHandler 12CE  
                    _MiWiCapacityInfo 0099                   _vT100EraseEndOfLine 131A  
                           __pintcode 0008                     __size_of_uartRead 0032  
                ??_PHYSetShortRAMAddr 0004                           __smallconst 0F00  
                  _AcknowledgementSeq 00EA                  ?_vT100EraseEndOfLine 0001  
                            _DELAY_ms 105A                             _hexpowers 0F53  
                            _LATBbits 000F8A                              _LATCbits 000F8B  
                            _LATDbits 000F8C                             _tempPANID 00E8  
               ?_UserInterruptHandler 0001                             _octpowers 0F3D  
                            _PIE1bits 000F9D                              _PIE3bits 000FA3  
           PHYGetLongRAMAddr@toReturn 0007                              i2u510_40 12AE  
                            _PIR1bits 000F9E                              i2u525_40 0FBA  
                            _PIR3bits 000FA4                             _rxMessage 0060  
                            i2u691_45 1298                              i2u691_46 129A  
                            i2u692_45 126E                              i2u692_46 1270  
                            i2u693_45 1212                              i2u693_46 1214  
                            i2u938_40 00BA                            uartWrite@c 00F3  
                           _uartWrite 12F6                              _SSP1CON1 000FC6  
                            _SSP2CON1 000F72                              _SSP2CON2 000F71  
                            _SSP1STAT 000FC7                              _SSP2STAT 000F73  
                         _MACRxPacket 002F                      __size_of_I2CTask 00B0  
                           high_isr@i 002E                 ??_vT100EraseEndOfLine 00F3  
                     _MiWiAckRequired 0098                              _ConnMode 004A  
                   ___lmul@multiplier 0001                           _INTCON2bits 000FF1  
                         _INTCON3bits 000FF0           __size_of_PHYGetShortRAMAddr 002A  
                           copy_data0 10FA                              _ScanTime 0F01  
                            _RxBuffer 028C                              __Hrparam 0000  
                            _TxBuffer 009B                              __Lrparam 0000  
                          ?_uartWrite 0001                       _tempLongAddress 007A  
                          _IEEESeqNum 0096                              __ptext10 1274  
                            __ptext11 124A                              __ptext12 11C6  
                            __ptext13 1304                              __ptext14 129C  
                    _switch0PressTime 008A                          _SSP1CON1bits 000FC6  
                            _high_isr 0008                          _SSP2CON1bits 000F72  
                        _SSP2CON2bits 000F71                      _switch1PressTime 0086  
              ??_UserInterruptHandler 0013                         __size_of_main 0010  
                            _myParent 0046                            _LCDCommand 0082  
                            _uartRead 1218                      _tempShortAddress 0058  
                            int$flags 005D                      ??_uartInitialize 00F3  
               __CFG_CPUDIV$OSC3_PLL3 000000                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2                      _myNetworkAddress 0050  
                            intlevel2 0000                            _RCSTA2bits 000F9C  
                         ??_uartWrite 00F3                         _MACInitParams 008E  
                      _MRF24J40Status 0043                      _BroadcastRecords 0100  
                          _PPSCONbits 000EFF                            _WDTCONbits 000FC0  
                   _knownCoordinators 0097                        _RouterFailures 006A  
